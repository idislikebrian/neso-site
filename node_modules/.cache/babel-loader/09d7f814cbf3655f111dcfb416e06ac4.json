{"ast":null,"code":"var _jsxFileName = \"/Users/studio-annex/Documents/neso/src/components/leaderboard/Leaderboard.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./leaderboard.scss\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Tabletop from \"tabletop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Leaderboard() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    Tabletop.init({\n      key: \"1qylFKLk_EoLVIWKIEdEwQVDKEIZ3nBP2oa1Lyjm-D2g\",\n      simpleSheet: true,\n      callback: showInfo\n    }).then(data => setData(data)).catch(err => console.warn(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), \"above ordered list\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((item, i) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [\"Testing\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"URL -- \", item.rank]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Email - \", item.team]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Leaderboard, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/Users/studio-annex/Documents/neso/src/components/leaderboard/Leaderboard.jsx"],"names":["React","useEffect","useState","Fragment","Tabletop","Leaderboard","data","setData","init","key","simpleSheet","callback","showInfo","then","catch","err","console","warn","map","item","i","rank","team"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ,CAACI,IAAT,CAAc;AACZC,MAAAA,GAAG,EAAE,8CADO;AAEZC,MAAAA,WAAW,EAAE,IAFD;AAGZC,MAAAA,QAAQ,EAAEC;AAHE,KAAd,EAKGC,IALH,CAKSP,IAAD,IAAUC,OAAO,CAACD,IAAD,CALzB,EAMGQ,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,IAAR,CAAaF,GAAb,CANlB;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,qCAGI;AAAA,gBACKT,IAAI,CAACY,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,kBACV,QAAC,QAAD;AAAA,2CAEA;AAAA,gCAAYD,IAAI,CAACE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA,iCAAaF,IAAI,CAACG,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA,SAAeF,CAAf;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA7BuBf,W;;KAAAA,W","sourcesContent":["import \"./leaderboard.scss\"\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Tabletop from \"tabletop\";\n\nexport default function Leaderboard() {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n      Tabletop.init({\n        key: \"1qylFKLk_EoLVIWKIEdEwQVDKEIZ3nBP2oa1Lyjm-D2g\",\n        simpleSheet: true,\n        callback: showInfo\n      })\n        .then((data) => setData(data))\n        .catch((err) => console.warn(err));\n    }, []);\n    \n    return (\n        <div className=\"leaderboard\">\n            <h1>Leaderboard</h1>\n            above ordered list\n            <ul>\n                {data.map((item, i) => (\n                <Fragment key={i}>\n                    Testing\n                <li>URL -- {item.rank}</li>\n                <li>Email - {item.team}</li>\n                <br />\n                </Fragment>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}